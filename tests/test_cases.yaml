standard_test_case:
  description: CSV padrão considerado na maioria dos testes
  csv_data: |
    header1,header2,header3
    1,2,3
    4,5,6
    7,8,9

test_cases:
  - name: test_libcsv_test_case
    description: Teste idêntico ao executado pelo arquivo test_libcsv
    csv_data: |
      col1,col2,col3,col4,col5,col6,col7
      l1c1,l1c2,l1c3,l1c4,l1c5,l1c6,l1c7
      l1c1,l1c2,l1c3,l1c4,l1c5,l1c6,l1c7
      l2c1,l2c2,l2c3,l2c4,l2c5,l2c6,l2c7
      l3c1,l3c2,l3c3,l3c4,l3c5,l3c6,l3c7
    selected_columns: col1,col3,col4,col7
    row_filter_definitions: |
      col1>l1c1
      col3>l1c3
    expected_output: |
      col1,col3,col4,col7
      l2c1,l2c3,l2c4,l2c7
      l3c1,l3c3,l3c4,l3c7

  - name: greater_than_and_less_than_row_filters
    description: >
      Teste com dois filtros (> e <)
    csv_data: |
      header1,header2,header3,header4
      1,2,3,4
      5,6,7,8
      9,10,11,12
    selected_columns: header1,header3,header4
    row_filter_definitions: |
      header1>1
      header3<10
    expected_output: |
      header1,header3,header4

  - name: equals_and_greater_than_row_filters
    description: Teste com dois filtros (= e >)
    selected_columns: header1,header3
    row_filter_definitions: |
      header1=4
      header2>3
    expected_output: |
      header1,header3
      4,6

  - name: three_different_row_filters
    description: Teste com 3 filtros diferentes (>, < e =)
    selected_columns: header1,header3
    row_filter_definitions: |
      header1>1
      header2=2
      header3<6
    expected_output: |
      header1,header3

  - name: row_filter_with_quotes
    description: Aspas não têm nenhuma interpretação especial
    csv_data: |
      hea"der1,header2,header3
      1,2,3
      4,5,6
      7,8,9
    selected_columns: hea"der1,header3
    row_filter_definitions: |
      hea"der1>2
    expected_output: |
      hea"der1,header3
      4,6
      7,9

  - name: BONUS_2_unordered_selected_columns
    description: >
      As colunas que aparecem na string de colunas selecionadas podem estar em 
      ordem arbitrária
      Exemplo: Se a string de colunas selecionadas é "header3,header1", sua 
      implementação deve selecionar as colunas nesta ordem.
    selected_columns: header3,header1
    expected_output: |
      header1,header3
      1,3
      4,6
      7,9

  - name: BONUS_3_unordered_row_filter_definitions
    description: >
      As colunas na string de filtros podem aparecer em ordem arbitrária
    row_filter_definitions: |
      header2>3
      header1=4
    expected_output: |
      header1,header2,header3
      4,5,6

  - name: BONUS_4_inexistent_selected_columns
    description: >
      Colunas que não existem podem aparecer na seleção de colunas e nos filtros
    selected_columns: header3,header4
    row_filter_definitions: |
      header2>3
      header1=4
    expected_output: |
      Header 'header4' not found in CSV file/string

  - name: BONUS_4_row_filter_inexistent_column
    description: >
      Colunas que não existem podem aparecer na seleção de colunas e nos filtros
    csv_data: |
      header1,header2,header3
      1,2,3
      4,5,6
      7,8,9
    row_filter_definitions: |
      header5=10
    expected_output: |
      Header 'header5' not found in CSV file/string

  - name: BONUS_5_invalid_row_filter_definition
    description: Tratamento de erro para filtros inválidos
    row_filter_definitions: |
      header1#2
    expected_output: |
      Invalid filter: 'header1#2'

  - name: BONUS_6_more_than_one_row_filter_per_header
    description: Aceitar mais de 1 filtro por header
    row_filter_definitions: |
      header1=1
      header1=4
      header2>3
      header3>4
    expected_output: |
      header1,header2,header3
      4,5,6

  - name: BONUS_7_three_different_bonus_row_filters
    description: >
      Implementar os operadores diferente (!=), Maior ou igual que (>=), e 
      Menor ou igual que (<=)
    row_filter_definitions: |
      header1!=2
      header2>=5
      header3<=6
    expected_output: |
      header1,header2,header3
      4,5,6
